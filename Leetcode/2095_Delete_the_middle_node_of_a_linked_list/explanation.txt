link: https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/

1. Create a slow pointer and a fast pointer such that:
	slow = head;
	fast = head->next;
2. Run a WHILE loop until fast != NULL && fast->next != NULL
	2.1. Update the pointers as follows:
		prev = slow;
		slow = slow->next;
		fast = fast->next->next;
	2.2. Check if fast == NULL. This means that there are odd number of nodes in the list.
		2.2.1. Update the pointers as follows:
			prev->next = slow->next;
			return head;
	2.3. Check if fast->next == NULL. This means there are even number of nodes in the list.
		2.3.1. Update the pointers as follows:
			prev = slow;
			slow = slow->next;
			prev->next = slow->next;
			return head;
3. Return the head of the list.
